@model  PagedList.IPagedList<Online_Shop.Models.Product>
@using Online_Shop.Utils
@using Online_Shop.Models
@using Online_Shop.Models.DTO
@using PagedList.Mvc
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categories = NavHelper.GetCategories();
    var manufacturers = NavHelper.GetManufacturers();
    var products = NavHelper.GetProducts();

    List<ProductCart> list = null;
    if (System.Web.HttpContext.Current.Session["User"] != null)
    {
        list = (List<ProductCart>)Session[Convert.ToString(((User)Session["User"]).Id)];
        if (list == null)
        {
            list = new List<ProductCart>();
        }
    }
}



<!-- //header -->
<!-- breadcrumbs -->
<div class="breadcrumbs">
    <div class="container">
        <ol class="breadcrumb breadcrumb1 animated wow slideInLeft" data-wow-delay=".5s">
            <li><a href="/Home"><span class="glyphicon glyphicon-home" aria-hidden="true"></span>Home</a></li>
            <li class="active">Products</li>
        </ol>
    </div>
</div>
<div class="products">
    <div class="container">
        <div class="col-md-4 products-left">

            <div class="categories animated wow slideInUp" data-wow-delay=".5s">
                <h3>Categories</h3>
                <ul class="cate">
                    @foreach (var item in categories)
                    {

                        <li>@Html.ActionLink(item.Name, "Category", "ProductView", new { id = item.Id }, FormMethod.Get)</li>

                    }
                </ul>
                <h3>Manufacturers</h3>
                <ul class="cate">
                    @foreach (var item in manufacturers)
                    {

                    <li>@Html.ActionLink(item, "Manufacturer", "ProductView", new { name = item }, FormMethod.Get)</li>

                    }
                </ul>
            </div>

        </div>
        <div class="col-md-8 products-right">
            <div class="products-right-grid">
                <div class="products-right-grids animated wow slideInRight" data-wow-delay=".5s">
                    <div class="sorting">
                        @using (Html.BeginForm("Category", "ProductView", new { id = TempData["Category_Id"] }, FormMethod.Post))
                        {
                            <select id="filter" name="filter" onchange="this.form.submit()" class="frm-field required sect">
                                <option value="null">Default sorting</option>
                                <option value="decrease">Sort by price: decrease</option>
                                <option value="increase">Sort by price: increase</option>
                            </select>
                        }

                    </div>

                    <div class="clearfix"> </div>
                </div>
            </div>

            <div class="product-box-container">
                @{
                    int perRow = 3;
                    int totalRows = Convert.ToInt32(Math.Ceiling(Convert.ToDouble(Model.Count() / perRow)));
                    int index = 0;
                }
                @for (int i = 1; i <= totalRows; i++)
                {
                <div class="row" style="margin-bottom:30px">
                    @foreach (var item in Model.Skip((i - 1) * perRow).Take(perRow))
                    {
                        var image = Path.Combine("/Include/Images/" + item.Images.Split(';')[0]);
                        <div class="col-md-4 product">
                            <div class="new-collections-grid1 animated wow slideInUp" data-wow-delay=".5s">
                                <div class="new-collections-grid1-image text-center">
                                    <a href="/ProductView/SingleItem/@item.Id" class="product-image"><img src="@image" height="100" width="100" /></a>
                                    <div class="new-collections-grid1-image-pos" style="text-align:center">
                                        <a href="/ProductView/SingleItem/@item.Id">Quick View</a>
                                    </div>
                                    <div class="new-collections-grid1-right">
                                    </div>
                                </div>
                                @{
                                    string name = item.Name;
                                    if (name.Length > 30)
                                    { name = name.Substring(0, 30); }
                                    else
                                    { name = name + "           "; }
                                }
                                <h4><a href="/ProductView/SingleItem/@item.Id">@name</a></h4>
                                <p>@(item.Short_desc.Substring(0, 15) + "...")</p>
                                <div class="new-collections-grid1-left simpleCart_shelfItem">
                                    <p style="text-align:center">$@item.Price</p>
                                    @if (item.Quantity > 0)
                                    {
                                        <p style="text-align:center">  <a href="javascript:void(0)" class="item_add" onclick="AddToCart(@item.Id,@item.Price)">Add to cart</a></p>
                                    }
                                    else
                                    { <p style="text-align:center">  <a class="item_add">Out Of Stock</a></p>}
                                </div>
                            </div>
                        </div>
                    }
                </div>
                }
                    <div class="clearfix"> </div>
                </div><nav class="numbering animated wow slideInRight" data-wow-delay=".5s" style="text-align:center">
                <div class="pagination">

                    @Html.PagedListPager(Model, page => Url.Action("Category", new { page }), new PagedListRenderOptions
                                {
                                         MaximumPageNumbersToDisplay = 5

                                     })

                </div>
            </nav>
            @*<div class=" pagination  pagination-lg" style="justify-content: center;">

                @Html.PagedListPager(Model, page => Url.Action("Category", new { page }), new PagedListRenderOptions
                            {
                                     MaximumPageNumbersToDisplay = 5

                                 })

            </div>*@

        </div>


        
    </div>

        <div class="clearfix"> </div>

    </div>
    
</div>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryunobtrusive")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        var listCart = [];
        if (JSON.parse('@Html.Raw(Json.Encode(list))') != null) {

             listCart = JSON.parse('@Html.Raw(Json.Encode(list))');
        }

        var countItem = listCart.length;
        function AddToCart(id,price) {
            if (JSON.parse('@Html.Raw(Json.Encode(list))') == null) {
                window.location.href = "/Home/Login";
            }
            $.ajax({
                type: "GET",
                url: "/Cart/AddToCart",
                data: { id: parseInt(id) },
                cache: false,
                success: function () {
                        alert("Added to cart successfully");
                        var countCheck = 0;
                        for (i = 0; i < listCart.length; i++) {
                            if (listCart[i].Id == id) {
                                countCheck = 1;
                                break;
                            }
                        };
                        console.log("count truoc: " + countItem);
                        if (countCheck == 0) {
                            countItem = countItem + 1;
                            listCart.push({ Id: id, Quantity: 1 })
                        }
                        console.log("count sau: " + countItem);
                        console.log(listCart);
                        var total = Number($('#total-cart-item').text().split('(')[0].trim().substr(1));

                        $('#total-cart-item').text("$" + (total + price) + "( " + countItem + " items)"); 
                }
            });
        }
    </script>


}

