@model Online_Shop.Models.DTO.UserRoles

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class=" row">
    <div class=" col-lg-12 grid-margin stretch-card">
        <div class=" card">
            <div class=" card-body">
                <h2>Create User</h2>


                @using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.User.User_name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.User.User_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Name" } })
                                @Html.ValidationMessageFor(model => model.User.User_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control", type = "Password", placeholder = "Enter Password" } })
                                @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.User.RePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.User.RePassword, new { htmlAttributes = new { @class = "form-control", type = "Password", placeholder = "Enter Confirm Name" } })
                                @Html.ValidationMessageFor(model => model.User.RePassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter User Name" } })
                                @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email" } })
                                @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.User.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Address" } })
                                @Html.ValidationMessageFor(model => model.User.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="form-horizontal">

                                <div class="form-group">

                                    <div class="col-md-12">
                                        <input type="file"  name="file" id="Files" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10 text-danger">
                                        @ViewBag.UploadStatus
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.User.Gender, new List<SelectListItem>
                           {
                               new SelectListItem{ Text="Male", Value="Male"},
                               new SelectListItem{ Text="Female", Value="Female"}
                           }, "--- Select ---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.User.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.User.Phone_number, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Phone Number" } })
                                @Html.ValidationMessageFor(model => model.User.Phone_number, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Role_id, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.User.Role_id, new SelectList(Model.Roles, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.User.Role_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.TextBoxFor(model => model.User.Dob, "{0:yyyy-MM-dd}", htmlAttributes: new { @type = "date", @class = "form-control", placeholder = "Enter Date Of Birth" })
                                @Html.ValidationMessageFor(model => model.User.Dob, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-12">
                                <input type="submit" value="Create" class="btn btn-inverse-primary" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
