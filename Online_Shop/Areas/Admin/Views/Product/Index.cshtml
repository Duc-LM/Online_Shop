@model IEnumerable<Online_Shop.Models.DTO.ProductWithCheckSpec>

@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <button type="button" class="btn btn-inverse-primary ">
                    @Html.ActionLink("Create New Product", "Create", "Product")
                </button>
                <br />
                <br />

                <h2 class="card-title">Products:</h2>
                @using (Html.BeginForm("Index", "Product", FormMethod.Post))
                {
                    //the following are search options
                    <b>Search Option:</b>
                    @Html.RadioButton("option", "Id")<text>ID</text>
                    @Html.RadioButton("option", "Name")<text>Name</text>


                    @Html.TextBox("search");
                    <input type="submit" name="submit" value="Search" class=" btn btn-inverse-secondary" / >
                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 text-success">
                        <h3 class=" text-success">@ViewData["Status"]</h3>
                    </div>
                </div>
                <br />
                <div class="table-responsive">
                    <table class="table table-hover ">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Product.Id)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.Product.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Product.Images)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Product.Price)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Product.Quantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Product.Updated_at)
                            </th>
                            <th>
                                Category 
                            </th>
                            <th>Specification</th>
                            <th>Actions</th>
                            <th>Information</th>
                        </tr>

                        @foreach (var item in Model)
                        {

                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.Id)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.Name)
                                </td>
                                <td>
                                    @{
                                        var InputFileName = item.Product.Images.Split(';')[0];
                                        var image = Path.Combine("/Include/Images/", InputFileName);
                                    }
                                    <img src="@image" width="200" height="200" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.Quantity)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.Updated_at)
                                </td>
                                <td>
                                    @if (item.Product.Category != null)
                                    {@Html.DisplayFor(modelItem => item.Product.Category.Name)}
                                    else
                                    {
                                        <em><b>Not Set</b></em>
                                    }
                                </td>
                                <td>
                                    @if (item.CheckSpec)
                                    {

                                        <button type="button" class="btn btn-inverse-infor ">
                                            @Html.ActionLink("Edit Spec", "Edit", "Spec", new { id = item.Product.Id }, new { @Style = "display: inline" })
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-inverse-info ">
                                            @Html.ActionLink("Add Spec", "Create", "Spec", new { id = item.Product.Id }, new { @Style = "display: inline" })
                                        </button>
                                    }
                                </td>
                                <td>
                                    <button type="button" class="btn btn-inverse-primary ">
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Product.Id }, new { @Style = "display: inline" })
                                    </button>

                                    @using (Html.BeginForm("Delete", "Product", new { id = item.Product.Id }, FormMethod.Post, new { @Style = "display: inline", onclick = "return confirm('Are you sure you wish to delete this product?');" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class=" btn btn-inverse-danger">Delete</button>
                                    }
                                </td>
                                <td>
                                    <button type="button" class="btn btn-inverse-primary ">
                                        @Html.ActionLink("Details", "Details", "Spec", new { id = item.Product.Id }, new { @Style = "display: inline" })
                                    </button>
                                </td>
                            </tr>
                        }

                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
