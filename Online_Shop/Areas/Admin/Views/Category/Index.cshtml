@model PagedList.IPagedList<Online_Shop.Models.Category>
@using PagedList.Mvc

@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<head>
    <link rel="stylesheet" href="~/Scripts/PaginationStyle.css" />
</head>

<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm( "Create","Category",FormMethod.Get))
                {
                <button type="submit" class="btn btn-inverse-primary ">
                    Create New Category
                </button>
                }
                <br />
                <br />

                <h2 class="card-title">Categories:</h2>


                @Html.Partial("SearchBox")

                <br />
                @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-success">
                @TempData["Status"]
            </div>
        </div>*@
                @if (Model.Count != 0)
                {

                    <div class="table-responsive">
                        <table class="table table-hover">
                            <tr>
                                <th>
                                    ID
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Short Description
                                </th>
                                <th>Actions</th>
                            </tr>

                            @foreach (var item in Model)
                            {
                                <tr class="rem-@item.Id">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Id)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Short_desc)
                                    </td>
                                    <td>
                                        @using (Html.BeginForm("Edit", "Category", new { id = item.Id }, FormMethod.Get, new { @Style = "display : inline" }))
                                        {
                                        <button type="submit" class="btn btn-inverse-primary ">
                                           Edit
                                        </button>
                                        }
                                        <input type="button" class=" btn btn-inverse-danger" onclick="Delete(@item.Id)" value="Delete">
                                        @Html.AntiForgeryToken()
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>}
                else
                {
                    <em><b>No Result</b></em>
                }
            </div>
        </div>
    </div>
</div>

<div class="pagination">

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
                {
                         MaximumPageNumbersToDisplay = 5

                     })

</div>
@section Scripts{


    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryunobtrusive")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
        function Delete(Id) {
            if (confirm('Are you sure you wish to delete this category?')) {

                $.ajax({
                    type: "POST",
                    url: "Category/Delete",
                    data: { id: parseInt(Id),__RequestVerificationToken: $('@Html.AntiForgeryToken()').val() },
                    cache: false,
                    success: function () {
                        console.log(2);
                        $('.rem-' + Id).fadeOut('slow', function (c) {
                            $('.rem-' + Id).remove();
                        });
                    }
                });

            }
        }
    </script>
    }
